{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState: {\n    cart: [],\n    btnCart: null,\n    filters: {},\n    search: false,\n    searchFilterProducts: null\n  },\n  reducers: {\n    clearCart(state, action) {\n      state.cart = state.cart.slice(0, action.payload);\n    },\n\n    addProductToCart(state, action) {\n      state.cart.push({ ...action.payload,\n        quantity: 1\n      });\n    },\n\n    incrementProductInCart(state, action) {\n      const item = state.cart.find(item => item.id === action.payload);\n      item.quantity++;\n    },\n\n    decrementProductInCart(state, action) {\n      const item = state.cart.find(item => item.id === action.payload);\n\n      if (item.quantity === 1) {\n        item.quantity = 1;\n      } else {\n        item.quantity--;\n      }\n    },\n\n    toggleBtnCart(state, action) {\n      state.btnCart = action.payload;\n    },\n\n    removeItemFromCart(state, action) {\n      state.cart = state.cart.filter(el => el.id !== action.payload);\n    },\n\n    filtersProductsByCategory(state, action) {\n      state.filters = action.payload;\n    },\n\n    toggleSearchForm(state, action) {\n      state.search = action.payload;\n    },\n\n    setSearchFilterProducts(state, action) {\n      state.searchFilterProducts = action.payload;\n    }\n\n  }\n});\nexport const productReducer = productsSlice.reducer;\nexport const {\n  clearCart,\n  addProductToCart,\n  incrementProductInCart,\n  decrementProductInCart,\n  toggleBtnCart,\n  removeItemFromCart,\n  filtersProductsByCategory,\n  toggleSearchForm,\n  setSearchFilterProducts\n} = productsSlice.actions;","map":{"version":3,"names":["createSlice","productsSlice","name","initialState","cart","btnCart","filters","search","searchFilterProducts","reducers","clearCart","state","action","slice","payload","addProductToCart","push","quantity","incrementProductInCart","item","find","id","decrementProductInCart","toggleBtnCart","removeItemFromCart","filter","el","filtersProductsByCategory","toggleSearchForm","setSearchFilterProducts","productReducer","reducer","actions"],"sources":["/home/asus/react-shop/src/redux/products/products.slice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\n\nconst productsSlice = createSlice({\n    name: 'products',\n    initialState: {\n        cart: [],\n        btnCart: null,\n        filters: {},\n        search: false,\n        searchFilterProducts: null\n    },\n    reducers: {\n        clearCart(state, action) {\n            state.cart = state.cart.slice(0, action.payload)\n        },\n        addProductToCart(state, action) {\n            state.cart.push({...action.payload, quantity: 1})\n        },\n        incrementProductInCart(state, action) {\n            const item = state.cart.find(item => item.id === action.payload)\n            item.quantity++\n        },\n        decrementProductInCart(state, action) {\n            const item = state.cart.find(item => item.id === action.payload)\n            if (item.quantity === 1) {\n                item.quantity = 1\n            } else {\n                item.quantity--\n            }\n        },\n        toggleBtnCart(state, action) {\n            state.btnCart = action.payload\n        },\n        removeItemFromCart(state, action) {\n            state.cart = state.cart.filter(el => el.id !== action.payload)\n        },\n        filtersProductsByCategory(state, action) {\n            state.filters = action.payload\n        },\n        toggleSearchForm(state, action) {\n            state.search = action.payload\n        },\n        setSearchFilterProducts(state, action) {\n            state.searchFilterProducts = action.payload\n        }\n    },\n})\n\nexport const productReducer = productsSlice.reducer\nexport const {\n    clearCart,\n    addProductToCart,\n    incrementProductInCart,\n    decrementProductInCart,\n    toggleBtnCart,\n    removeItemFromCart,\n    filtersProductsByCategory,\n    toggleSearchForm,\n    setSearchFilterProducts\n} = productsSlice.actions\n"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,aAAa,GAAGD,WAAW,CAAC;EAC9BE,IAAI,EAAE,UADwB;EAE9BC,YAAY,EAAE;IACVC,IAAI,EAAE,EADI;IAEVC,OAAO,EAAE,IAFC;IAGVC,OAAO,EAAE,EAHC;IAIVC,MAAM,EAAE,KAJE;IAKVC,oBAAoB,EAAE;EALZ,CAFgB;EAS9BC,QAAQ,EAAE;IACNC,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACrBD,KAAK,CAACP,IAAN,GAAaO,KAAK,CAACP,IAAN,CAAWS,KAAX,CAAiB,CAAjB,EAAoBD,MAAM,CAACE,OAA3B,CAAb;IACH,CAHK;;IAINC,gBAAgB,CAACJ,KAAD,EAAQC,MAAR,EAAgB;MAC5BD,KAAK,CAACP,IAAN,CAAWY,IAAX,CAAgB,EAAC,GAAGJ,MAAM,CAACE,OAAX;QAAoBG,QAAQ,EAAE;MAA9B,CAAhB;IACH,CANK;;IAONC,sBAAsB,CAACP,KAAD,EAAQC,MAAR,EAAgB;MAClC,MAAMO,IAAI,GAAGR,KAAK,CAACP,IAAN,CAAWgB,IAAX,CAAgBD,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYT,MAAM,CAACE,OAA3C,CAAb;MACAK,IAAI,CAACF,QAAL;IACH,CAVK;;IAWNK,sBAAsB,CAACX,KAAD,EAAQC,MAAR,EAAgB;MAClC,MAAMO,IAAI,GAAGR,KAAK,CAACP,IAAN,CAAWgB,IAAX,CAAgBD,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYT,MAAM,CAACE,OAA3C,CAAb;;MACA,IAAIK,IAAI,CAACF,QAAL,KAAkB,CAAtB,EAAyB;QACrBE,IAAI,CAACF,QAAL,GAAgB,CAAhB;MACH,CAFD,MAEO;QACHE,IAAI,CAACF,QAAL;MACH;IACJ,CAlBK;;IAmBNM,aAAa,CAACZ,KAAD,EAAQC,MAAR,EAAgB;MACzBD,KAAK,CAACN,OAAN,GAAgBO,MAAM,CAACE,OAAvB;IACH,CArBK;;IAsBNU,kBAAkB,CAACb,KAAD,EAAQC,MAAR,EAAgB;MAC9BD,KAAK,CAACP,IAAN,GAAaO,KAAK,CAACP,IAAN,CAAWqB,MAAX,CAAkBC,EAAE,IAAIA,EAAE,CAACL,EAAH,KAAUT,MAAM,CAACE,OAAzC,CAAb;IACH,CAxBK;;IAyBNa,yBAAyB,CAAChB,KAAD,EAAQC,MAAR,EAAgB;MACrCD,KAAK,CAACL,OAAN,GAAgBM,MAAM,CAACE,OAAvB;IACH,CA3BK;;IA4BNc,gBAAgB,CAACjB,KAAD,EAAQC,MAAR,EAAgB;MAC5BD,KAAK,CAACJ,MAAN,GAAeK,MAAM,CAACE,OAAtB;IACH,CA9BK;;IA+BNe,uBAAuB,CAAClB,KAAD,EAAQC,MAAR,EAAgB;MACnCD,KAAK,CAACH,oBAAN,GAA6BI,MAAM,CAACE,OAApC;IACH;;EAjCK;AAToB,CAAD,CAAjC;AA8CA,OAAO,MAAMgB,cAAc,GAAG7B,aAAa,CAAC8B,OAArC;AACP,OAAO,MAAM;EACTrB,SADS;EAETK,gBAFS;EAGTG,sBAHS;EAITI,sBAJS;EAKTC,aALS;EAMTC,kBANS;EAOTG,yBAPS;EAQTC,gBARS;EASTC;AATS,IAUT5B,aAAa,CAAC+B,OAVX"},"metadata":{},"sourceType":"module"}